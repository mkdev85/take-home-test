{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/v1/authors/": {
      "get": {
        "description": "API for fetching all authors details.",
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "type": "string",
            "description": "Default value of this field is 1. It is used for pagination."
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "string",
            "description": "Default value of this field is 5. It is used for pagination."
          },
          {
            "name": "search_by_name",
            "in": "query",
            "type": "string",
            "description": "This field is used for filtering the author record by name."
          },
          {
            "name": "sort_by_date",
            "in": "query",
            "type": "string",
            "description": "This field is used for sorting the data as per creation date of record. Valid values for this field are 'ASC' and 'DESC.'"
          }
        ],
        "responses": {
          "default": {
            "description": "All authors details."
          }
        }
      },
      "post": {
        "description": "API for create the author.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any",
                  "description": "Author Name."
                },
                "bio": {
                  "example": "any",
                  "description": "Author Bio."
                },
                "birthDate": {
                  "example": "any",
                  "description": "Author Birthdate. Format: YYYY-MM-DD"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Author details."
          }
        }
      }
    },
    "/api/v1/authors/{authorId}": {
      "get": {
        "description": "API for get author details.",
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Author Id should be UUID format."
          }
        ],
        "responses": {
          "default": {
            "description": "Author details."
          }
        }
      },
      "put": {
        "description": "API for update an author details.",
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Author Id should be UUID format."
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any",
                  "description": "Author Name."
                },
                "bio": {
                  "example": "any",
                  "description": "Author Bio."
                },
                "birthDate": {
                  "example": "any",
                   "description": "Author Birthdate. Format: YYYY-MM-DD"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Author details."
          }
        }
      },
      "delete": {
        "description": "API to delete the author record. All associated books records will also be deleted by deleting an author.",
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Author Id should be UUID format."
          }
        ],
        "responses": {
          "default": {
            "description": "Author details."
          }
        }
      }
    },
    "/api/v1/books/": {
      "get": {
        "description": "API for fetching all books details.",
        "parameters": [
          {
            "name": "author_id",
            "in": "query",
            "type": "string",
            "description": "Author id should be in UUID format."
          },
          {
            "name": "page_number",
            "in": "query",
            "type": "string",
            "description": "Default value of this field is 1. It is used for pagination."
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "string",
            "description": "Default value of this field is 20. It is used for pagination."
          },
          {
            "name": "title",
            "in": "query",
            "type": "string",
            "description": "This is optional field. This field is used for filtering the books data by book title."
          },
          {
            "name": "genre",
            "in": "query",
            "type": "string",
            "description": "This is optional field. This field is used for filtering the books data by book genre."
          },
          {
            "name": "published_year",
            "in": "query",
            "type": "string",
            "description": "This is optional field. This field is used for filtering the books data by book published year."
          },
          {
            "name": "sort_by_date",
            "in": "query",
            "type": "string",
            "description": "This is optional field. This field is used for sorting the books records by creation date. Valid values for this fields are 'ASC' or 'DESC'."
          },
          {
            "name": "sort_by_published_year",
            "in": "query",
            "type": "string",
            "description": "This is optional field. This field is used for sorting the books records by book published year."
          }
        ],
        "responses": {
          "default": {
            "description": "All Books detaills."
          }
        }
      },
      "post": {
        "description": "Create a book.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "publishedYear": {
                  "example": "any",
                  "description": "Book publish year. Format: YYYY"
                },
                "title": {
                  "example": "any",
                  "description": "Book title."
                },
                "genre": {
                  "example": "any",
                  "description": "Book genre"
                },
                "authorId": {
                  "example": "any",
                  "description": "Book author id. The value of this field should be in UUID format."
                },
                "availableCopies": {
                  "example": "any",
                  "description": "Book available copies. Format: Any non negative number."
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Book details"
          }
        }
      }
    },
    "/api/v1/books/{bookId}": {
      "get": {
        "description": "API to fetch details of book",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book Id, This field shoud be in UUID format"
          }
        ],
        "responses": {
          "default": {
            "description": "Book details"
          }
        }
      },
      "put": {
        "description": "API to update the book record",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "bookId, This field should be in UUID format."
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "publishedYear": {
                  "example": "any",
                  "description": "Book publish year. Format: YYYY"
                },
                "title": {
                  "example": "any",
                  "description": "Book title."
                },
                "genre": {
                  "example": "any",
                  "description": "Book genre"
                },
                "availableCopies": {
                  "example": "any",
                  "description": "Book available copies. Format: Any non negative number."
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "API to delete the book. All associated borrow records will also be deleted by deleting an book.",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "book id, This field should be in UUID format."
          }
        ],
        "responses": {
          "default": {
            "description": "Book record."
          }
        }
      }
    },
    "/api/v1/borrow-records/": {
      "get": {
        "description": "API to fetch all borrow records.",
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "type": "string",
            "description": "Default value of this field is 1. It is used for pagination."
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "string",
            "description": "Default value of this field is 20. It is used for pagination."
          },
          {
            "name": "book_id",
            "in": "query",
            "type": "string",
            "description": "Book Id, This field should be in UUID format."
          }
        ],
        "responses": {
          "default": {
            "description": "All borrow records details."
          }
        }
      },
      "post": {
        "description": "API to create the borrow record.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "returnDate": {
                  "example": "any",
                  "description": "Borrow Record return date, this field should be in YYYY-MM-DD format."
                },
                "borrowDate": {
                  "example": "any",
                  "description": "Borrow Record borrow date, this field should be in YYYY-MM-DD format."
                },
                "borrower": {
                  "example": "any",
                  "description": "Borrower name"
                },
                "bookId": {
                  "example": "any",
                  "description": "Book Id, This field should be in UUID format"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Borrow record data."
          }
        }
      }
    },
    "/api/v1/borrow-records/{borrowRecordId}": {
      "get": {
        "description": "API to get borrow record details.",
        "parameters": [
          {
            "name": "borrowRecordId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Borrow record Id, This field should be in UUID format."
          }
        ],
        "responses": {
          "default": {
            "description": "Borrow Record details"
          }
        }
      },
      "put": {
        "description": "API to update the borrow record.",
        "parameters": [
          {
            "name": "borrowRecordId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Borrow record Id, This field should be in UUID format."
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "returnDate": {
                  "example": "any",
                  "description": "Borrow Record return date, this field should be in YYYY-MM-DD format."
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Borrow Record details."
          }
        }
      },
      "delete": {
        "description": "API to delete the borrow record",
        "parameters": [
          {
            "name": "borrowRecordId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Borrow record Id, This field should be in UUID format."
          }
        ],
        "responses": {
          "default": {
            "description": "Borrow Record details."
          }
        }
      }
    }
  }
}